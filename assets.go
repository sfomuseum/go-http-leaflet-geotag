// Code generated by go-bindata.
// sources:
// static/javascript/Leaflet.GeotagPhoto.Camera.js
// static/javascript/Leaflet.GeotagPhoto.CameraControl.js
// static/javascript/Leaflet.GeotagPhoto.Crosshair.js
// static/css/Leaflet.GeotagPhoto.css
// static/images/camera-icon.svg
// static/images/camera.svg
// static/images/crosshair-icon.svg
// static/images/crosshair.svg
// static/images/marker.svg
// DO NOT EDIT!

package leaflet

import (
	"github.com/whosonfirst/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticJavascriptLeafletGeotagphotoCameraJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x5b\x73\xdb\xb6\xf2\x7f\xd7\xa7\xd8\xce\x7f\xa6\xa4\x1a\x99\x96\x9c\xa6\x4d\x34\xa3\xe9\xb8\x4a\xd2\x69\xff\x4a\xdd\x69\xdc\x9e\x07\xd7\x93\x81\x49\x88\xc2\x09\x05\x68\x48\xc8\x8e\xda\xfa\xbb\x9f\x21\xae\x0b\x5e\x24\xd9\x6e\x7b\xce\x93\x44\x60\x6f\xf8\x61\xb1\xd8\x5d\x92\xad\x37\xa2\x94\xb0\x80\x65\x29\xd6\x10\x2d\x28\x59\x16\x54\x46\x03\x33\xfe\x87\x1a\x7f\x4b\x89\xdc\x96\x14\xee\x0d\xd5\x92\xd1\x22\x3b\x11\xcb\x93\x5b\x46\xef\xa2\x81\x25\xfe\x8e\x0a\x49\xf2\x9f\x56\x42\x8a\x39\x59\xd3\x92\xcc\x05\x97\xa5\x28\x0c\x57\x72\x6a\xa4\x27\x88\x30\x09\x28\xa3\xc1\x60\x91\xe4\x7d\x62\x66\xb0\xdc\xf2\x54\x32\xc1\x21\x6e\x11\x8d\x40\x6c\xea\xa9\x6a\x08\x7f\x0c\x00\x4a\x2a\xb7\x25\x07\x4e\xef\x7a\xcd\xda\x27\x63\x70\x3f\x18\xd0\x4f\x6a\x55\x19\x5d\x92\x6d\x21\x61\x91\x18\x18\xbe\x2b\xc5\x76\x93\xd0\x4f\x92\xf2\x2c\xfe\x63\x30\x00\xcb\x35\x55\x9a\x01\x4e\x4f\xe1\x5f\x2b\x2a\x57\xb4\x04\xb9\xa2\x90\x2a\xd9\xc0\x2a\xc8\x4a\x92\xe7\xe4\xa6\xa0\x70\xc7\xe4\x0a\xd6\x62\x5b\xd1\x53\x29\xb6\xe9\x0a\x44\x09\x5c\x48\xc5\xee\xa8\xa6\x20\xcb\x2d\x1d\x0d\x5a\x42\x05\x54\x2b\x71\x67\x05\xa7\x06\x9e\x9b\xad\x94\x82\x57\x8a\xda\x8c\xf5\x4a\x58\x51\x20\x3c\x2f\x28\x88\xa5\x7a\x08\x76\x14\x52\xc2\xe1\x86\x42\xba\x22\x3c\xa7\x99\x36\x96\x20\xeb\xd7\xa4\xfc\x48\x4b\x25\x54\x49\x79\xa7\x9e\x03\x65\x6b\xc6\xcf\xeb\xa9\x29\xbc\x18\xe9\x01\xf2\xc9\x0c\x4c\xce\xc6\xde\xa2\x79\x60\x3c\xb0\x35\xc9\x69\xb0\x04\xbd\x33\xdf\xaf\xf3\x29\x44\x49\x72\xaa\x09\x4e\xf5\xd2\x4f\x58\x2a\x78\x52\xdd\xe6\xd1\x28\x60\x29\x45\x55\xad\x08\x2b\x5b\x5c\x76\x02\x33\x6a\x4e\xad\x25\x15\x7c\x0a\x8b\xa4\x9e\x8d\xf5\x5e\x02\xd4\x0f\xbf\x94\x45\x87\x7a\xa4\x59\x93\xbd\x67\xbf\xd3\x29\x5c\x3d\x7f\x39\x82\xe7\x2f\xaf\xf1\xcc\x39\x4f\x57\xa2\x9c\xc2\xd5\xe4\xd5\x08\x26\xaf\xae\xd5\xd4\xfd\xd0\x68\x97\xa4\xcc\xa9\x3c\x5a\xbb\x86\xbf\x57\xfb\xd9\x08\x9e\x9f\xf5\x68\xff\x6a\x04\x93\xaf\x1a\xda\xd5\x16\xfe\xb7\x94\x8b\xad\x2c\x18\xa7\xef\xe5\xae\x76\x0d\xab\x38\x15\x45\xcd\x12\xdd\x14\x24\xfd\xe8\xf4\x88\x0d\x49\x99\xdc\x4d\x61\x9c\xbc\xb0\x63\x77\x94\xe5\x2b\x39\x85\x33\x3b\x90\x91\x6a\x75\x5e\x96\x64\x37\x85\xe8\xc5\x08\xbe\x76\xdc\xb5\x9a\x39\xd9\x4c\x21\x2a\xc5\x96\x67\xc1\xf8\x0f\x82\x71\x37\xa1\x0d\x34\xf6\x2d\x59\x51\x34\x8c\xb3\x2a\xc7\x56\x42\x4d\x73\xe1\x6d\x3b\xc3\xe3\x73\xb3\x92\xff\x7b\xfe\xfc\xe5\xcb\xe5\xd2\x08\x1f\x58\x05\x8c\x33\xc9\x48\xa1\xc0\xf3\xc1\x6d\xa9\x03\x4d\x23\xa4\x01\x2c\x92\x8a\xca\x0b\x3d\x16\xcb\x15\xab\x50\xc0\xd2\x8e\xb4\x62\x55\x62\x86\x12\x7b\x04\x61\x06\xef\x88\x5c\x25\x6b\xf2\x29\xee\x24\x18\xc1\x64\xd8\xc1\x6e\x0e\xac\x63\x67\x3c\xee\x24\x18\xc1\xe4\xeb\x57\xd8\x80\x0f\x2a\x9a\x5c\x2c\x7f\xad\x63\xc9\x0c\xdf\x20\x76\x65\x48\xdd\x07\x62\x94\xb4\x58\x93\x4d\x29\x36\xb4\x94\x8c\x56\x89\x22\xd2\x2a\x6e\x49\x09\x05\xd9\xd1\xb2\x72\x4c\x69\x49\x89\xa4\x0b\x35\x18\x0f\x0d\x54\xea\x51\xc7\xea\x4d\x29\xa4\x90\xbb\x0d\x4d\x3c\xde\x49\x4a\x8a\xc2\x80\xa8\xc5\xe1\x25\x54\x54\xbe\xb6\xe1\x2e\x5c\xb5\x8b\x82\x43\xb7\x89\x81\x7e\xbc\x8f\x76\xdf\x8c\x95\x2e\xc6\x58\xc3\xad\x4c\x3f\x83\xc8\x7d\x50\x68\x92\xfb\x99\x26\x8c\x5d\xd4\x6e\xc2\xc3\xb7\x11\x8c\xcb\x05\xab\xa4\x43\x30\xa7\xf2\x27\x3b\x18\xb7\x76\x62\xe8\x38\xb5\xa5\x0b\x22\x17\x3c\xc7\xcc\x3a\x4a\xbf\x2d\xc5\xda\x8b\x71\x5a\x3c\xbb\xb6\xbc\xcd\x7e\xa9\xc6\x0f\xb2\xab\xa5\xb4\xb9\x95\x17\xf6\x32\x23\x8c\x36\xa2\xd8\xd5\xc7\x1d\x66\xb0\x48\xec\x83\xa7\x1d\x85\xc0\xe1\xd0\x34\x6c\x48\xc9\x15\xce\x5a\x48\x2e\x38\x96\x71\x71\xf3\x6f\x9a\xca\x84\x54\x15\xcb\x1b\x27\xc6\x05\x93\x91\x8f\x74\x05\xa9\xaa\x1f\xc9\x9a\x4e\x5b\x69\x95\x8e\x93\xc1\x02\x52\x97\x09\xf5\xa7\x49\xc6\xa7\x9d\x02\x7f\x7f\x86\x3e\xd7\xb8\x5e\x6d\xd0\x4a\x83\xcb\xb3\x93\x05\x51\x18\x23\x07\x2d\x37\xd7\x29\x81\x32\x54\xdf\x18\x31\x76\x1d\x6f\x1e\x53\xf7\x4e\xf3\x80\xb8\x60\x8e\x52\xa1\xce\x43\x68\x09\x7f\xff\x9e\x67\xf4\xd3\xc5\x72\x59\x51\x39\x85\xaf\xc6\x2e\x36\x4b\x26\x6b\xee\x48\xaf\xd3\x05\x7d\x52\xc8\x29\x44\x0b\x91\x12\x75\x52\x4d\x16\xa4\x0d\xb0\xc8\x27\x82\xc7\x51\xad\x29\x32\x8e\xf1\x41\x70\xbd\xac\x3a\x34\xe8\xb1\xa1\x91\xe7\x68\x69\x7d\xb3\x74\x90\xbf\xe1\x99\xe5\x68\x9d\xf1\x36\x56\xf8\x9c\x74\x63\xe5\x63\xc0\x13\xb1\x3a\x6b\x63\xa5\x4f\xe3\x01\xac\xb4\x01\xff\x20\x56\x28\xd3\xc4\x50\xa1\x98\xd0\x8d\x94\x8b\x7f\x4f\x04\xea\xcb\x36\x50\x2a\xf0\x34\x70\x7a\x5b\x1f\xe2\x1a\x24\x95\x49\x2b\xe5\xfb\x40\x3a\xf7\xab\xfa\x0b\x90\xaa\x83\xe4\x4d\x9d\xc4\xfc\xb2\xc9\x88\x34\x72\xbf\xa5\xa4\x64\x3c\xf7\xd7\xe5\xb6\x63\x32\xb9\x61\x3c\x8b\xbd\xf2\x5a\x92\x46\xf8\x7d\x7d\x35\x54\x41\xf1\xb5\x11\x2e\x25\x31\x17\x4a\x7d\xc1\xbe\x0b\xc9\x17\x89\x1e\x40\xb7\xef\x87\x4a\x4d\x1a\xc6\x16\x13\xbe\x92\x6b\x15\x86\xae\x77\x41\xe6\xaa\xbf\xef\x8b\x3e\x56\x9f\x5b\x38\x3e\x6e\x68\x12\xaf\x53\xcb\x32\xd5\xe3\x95\xdd\x6f\x1c\xf7\x47\xad\xc1\xfa\x96\x08\x47\xb1\xa2\x70\x06\x79\x71\x38\x81\x0d\x57\x13\xd7\x2e\xbf\x20\x59\x76\x29\x70\x5e\xb1\x26\x9b\x30\xb5\x58\x93\x8d\x5a\xc7\x66\x60\x92\x9f\xa0\x54\xf5\x1b\xa0\x24\x61\x98\x6b\x49\x9a\x87\x2d\x21\xee\x8a\xf6\x7e\xa3\x83\x2b\x48\x8b\x52\x96\xb4\x37\x41\xed\xd8\x05\x7f\x2d\xd2\xed\x9a\x72\xf9\xff\x74\xf7\x5a\xdc\xb9\xc4\xe4\x83\x68\xce\x34\x9d\x2f\x33\xd3\xb5\x92\x37\xb7\x54\xdf\xac\x94\xd3\x32\x8e\x3e\xd2\x5d\x26\xee\xb8\x3b\x0d\xdd\xaa\x1e\x91\xca\xc1\x9e\xc3\xd1\x95\x11\x61\x3f\xa9\xa7\xdd\x6e\x95\x74\x2d\x6e\x55\x3a\x72\xc4\x96\x6d\x79\x46\x97\x8c\xd3\xec\xc0\xc6\x79\xa1\x07\x76\xaf\x0f\x10\xb7\x8b\x0e\x5b\x2d\xf2\x91\xf0\xa2\x2d\xef\xc2\x20\xc8\x27\x83\xca\x06\x41\x68\x4c\x6a\x9c\x35\xfb\x0b\x80\x4b\x81\x9c\x8a\x35\x95\xe5\xce\xfe\x61\xb4\xba\x9a\x5c\x27\xa9\x10\x65\xc6\x38\x91\xb4\xba\x1a\x5f\x5f\x4d\x5c\xe1\xf9\x18\xee\xf1\xb5\x61\x76\x52\x8e\xb7\x65\x1c\x4a\x7b\x88\x21\xe3\xa6\x21\x8f\xb7\x62\xd2\xb4\xe2\x29\x88\x4c\x30\x22\x8d\x88\xd4\x93\xf2\x4f\x83\x3b\xc2\x66\xe0\xe1\x3e\xbb\xf1\xab\x49\x28\xaf\xa3\x06\x38\x46\x9e\x45\xc7\x13\xe8\xbd\x84\x67\x48\xd5\x59\x3d\x32\x84\x53\xdf\x26\x08\xc9\x27\x2d\xf2\x89\x26\xef\x58\x77\xbb\xda\x78\xd8\xb2\xcf\x90\x38\x92\x65\x3f\x0b\x49\x24\xbd\x2c\x09\xaf\x96\xa2\x0c\x62\x06\x2d\x68\x7d\xe8\x46\x50\xd6\x34\x4c\xb8\x53\x5c\x9f\xf6\xcf\xcc\xac\x3f\xd9\x5a\x13\x3e\x9a\xaa\xe4\xb2\x92\x61\x06\x86\x25\xa9\xea\x1a\xe4\x6a\x91\xbc\x16\xeb\x5f\x24\x2b\x92\xcb\x9f\xcf\x7f\x7c\xff\xf6\xe2\xe7\x77\xd7\x8e\x4d\xa9\xac\x0b\xa5\x48\xff\x8b\x23\x78\xe6\xec\x80\x67\x10\x0d\x23\xad\x23\x90\x99\x38\x6d\x17\x25\xcb\x59\x1d\xf2\xa3\x94\x72\x49\x4b\xd0\x3f\x11\x0a\x57\x96\x34\x61\x3a\xcd\x8a\x8d\xaa\x68\x08\x9f\xcd\x66\x70\x32\xf1\x4b\x3b\x6c\x78\x7d\xb9\x38\x81\x25\xdd\x14\x24\xa5\xf1\xa9\x16\xf8\x5b\x9c\x7c\xf1\xcd\x6f\xc3\x53\x03\xa4\x09\xf7\xf7\x40\x8b\x8a\x3e\x52\x45\x8d\x00\x38\x48\x68\xa3\xab\xd3\x79\x89\x1c\x08\x83\x8d\x9e\x09\x7a\xfa\xf3\xcf\x76\x6f\x04\xa5\x7b\x5a\x7c\xc8\x83\x5b\x27\x86\x20\x2c\xa2\xfb\xc9\x75\xa7\x05\x25\x2c\x2d\x17\x8d\xbb\x32\xad\x3a\xe3\x1e\x39\x63\x9e\x41\x94\xd1\x3c\x1a\x1e\x23\x27\x4c\xca\x1e\x2f\x07\x65\x56\x56\x4c\xec\xe5\xe8\x55\x9f\xc2\xd9\x10\x0b\x35\xdb\x95\x95\xe4\xee\xad\x87\xe3\x6f\xda\xa9\x03\x5d\x97\x56\xbf\x25\x4c\x30\xeb\x3c\x46\x97\x39\x55\xb3\x35\x12\xa4\xa7\xbd\x74\x81\x6b\xf6\xac\xd6\x2e\x11\xfb\x09\x42\x77\x7f\x1b\x28\x70\x08\x57\xbe\xc6\x07\xba\x3f\xc1\xf6\x63\xae\x86\x32\x7d\x3d\xc0\xcc\xa7\xa3\xbb\x4d\x5d\x83\x99\x84\xc9\x55\x61\xde\x95\x7d\xc7\xd6\xf4\xb8\xa7\xe0\x57\xa1\xf0\xd0\x7f\xec\x5d\x88\xe9\x8d\xf0\xef\xcc\xd4\x5c\x14\x05\x55\x18\x45\xfe\x3e\xf5\x57\xe7\x14\xdd\xd1\xe0\xf6\x56\xfc\x50\x09\xae\xf6\x37\xe8\x7d\x0c\x47\xfb\x69\x31\x4a\x43\x47\x6a\x6f\xe2\xfb\x76\xb6\xdd\xdf\x6d\xc5\xc8\x21\x40\x8f\x6f\xa3\x1d\xd5\x1c\x6c\x35\x73\xcd\x66\x3a\x47\xc4\x35\x7a\x50\xd2\x1f\x9b\x6b\x7b\x8e\xc6\x49\xed\x26\x36\x9e\xde\x2a\xae\x83\xbb\xf5\x56\x62\x67\xff\x27\x1c\x7a\x1f\xfc\x18\xb7\xce\x43\xa0\x8e\x72\x75\xd8\xfd\xff\x97\x9d\xf9\x00\x6d\xe0\x25\x4f\xf2\x7b\x0d\xd6\x30\xa8\x01\x95\x2f\xb4\xfd\xa5\x75\xf5\x05\x0e\x74\xd0\x77\xb0\x1f\x63\xbf\x44\xba\x97\xac\xa4\x71\xc4\xf8\x66\x2b\xa3\x1e\xe1\x6f\x78\xb6\x4f\xbe\x96\xa0\xdf\xc6\x62\x11\x75\xfd\x66\x5f\xbd\xe2\x4a\x53\x35\x17\x40\xa8\xbe\x15\x76\x72\x05\x8b\x73\xb9\x35\xd9\x24\x85\x42\xfb\x52\xcc\x05\x97\x84\x71\x5a\xea\x9d\x58\xb7\x1c\x51\xaf\xc7\x0a\x50\xbf\x75\x71\x1e\x1b\x25\x4e\x45\x11\xba\x75\xad\x23\x0d\x64\x5f\x0a\x23\x52\xc9\xd0\x8c\xeb\x66\xbc\x28\xfa\x42\xc5\x5e\x88\xdb\x00\x59\x8c\x4d\xd9\xda\x85\x52\x23\x0e\xd4\x90\xbe\xa6\x85\x24\x30\x83\xb3\xb1\xcb\x55\xe9\xad\x4c\xaa\x15\x5b\xd6\x05\xb0\xcf\x4a\x31\xb1\xff\xff\x05\x7c\x89\x7d\xd5\xb2\x7f\xa4\xbb\xb9\xc8\x28\xcc\x66\x33\x78\xfe\xb5\x17\x72\x7a\x0a\x05\x5d\xca\xa0\xc7\xe2\x37\xd6\xd9\xb9\x48\x14\x60\xf1\x89\x53\x34\x82\xf1\x30\xc8\x64\x3b\x35\xbd\x0c\x34\x6d\x37\xc7\xea\x19\x8f\xc0\xab\x3a\x42\xcf\xab\x40\x4f\xc9\xf2\xd5\xd1\x4b\x7a\xd8\x8a\xbe\x1c\x07\x9a\x32\x71\xc7\x1f\xb0\xa6\xd6\x92\x7a\xae\x8b\x0e\x8f\x69\x78\x8a\x0a\x16\xce\x55\x92\x17\x07\x7c\x25\x20\x47\x0f\x4f\xf7\x96\x46\x6c\xd3\x69\xdb\x09\xd2\xf1\xe4\xcd\xeb\xd4\xf0\xac\xad\x01\x63\xd9\xe8\x18\xf5\x00\x59\x5b\xe3\x9b\x7d\xa9\x64\xb7\xf4\x8d\xae\xc3\x94\x61\x7d\x85\x46\xb3\x27\xd9\x38\xe7\x1d\x05\x8a\x3e\xe8\x4d\x20\x0e\xaa\x6e\xd7\x26\xc7\xa9\x0e\xfa\xbf\x8f\x53\xdd\x2a\x67\xda\x9a\xdb\xfe\x1a\x7b\x55\x7e\x33\x2a\x6b\xc9\xaf\xac\x62\xea\xb5\x47\x3b\x0c\xde\xea\x29\xab\x63\x8d\xf4\x9a\xca\x3e\x63\xd5\xa6\x20\x3b\x98\x59\x5a\xf8\x06\x22\xc6\x57\xb4\x64\x32\x82\x29\x44\x5c\x70\xf5\xa6\xc3\x75\x4a\xfc\xd5\x8e\x35\x9a\xd8\x1e\x76\x47\x1a\x49\x8d\x62\x72\xc9\x09\x6a\x4a\x4d\xe1\x4a\xf3\x27\x05\xcf\x47\x60\xff\x13\x79\xdd\x58\x74\x4e\xe5\x81\x12\x07\xb5\x2d\xc3\x7a\x0d\x89\x98\xa3\x4c\xe7\xa0\x8c\x3d\xd9\xa2\x13\x78\x89\xd2\xa1\x83\x02\xf7\x24\x92\x0d\x0b\x5b\x20\x77\xca\x0b\x13\xb3\x7a\xa8\xb1\x44\x7d\xcd\x37\x8c\x7d\x82\x6c\xbc\xda\x86\xec\xb9\xea\x06\x75\x89\x55\xbd\x2d\x97\x3d\xec\xeb\x6e\x19\x03\x16\x26\x8b\xf9\x56\x6c\x79\x56\xc5\xc1\x3b\x9b\xd6\x02\x47\x8d\xd9\xd0\x44\xdd\xed\x1b\x26\xce\x40\x04\xb6\xee\x5f\x69\x25\xd8\x6e\xd5\x21\xaf\xda\xb5\x84\xa6\xb4\x99\x50\x4e\xa5\xb1\x0f\x35\xec\x3f\xd3\xbc\x36\x43\xaa\x62\xcc\x39\x0c\xdf\xb0\x99\x2e\x9a\x17\x87\x0c\x84\x3d\x45\x4c\x0b\x01\x44\xdf\x55\xbe\xb4\x31\x41\x0c\xda\xde\xb9\x35\xc5\x98\x8f\x8d\x41\xc4\x9c\xde\xcd\x43\x83\x7c\x5d\x81\x05\xd5\xdb\x07\x27\x10\xa7\xf8\x09\x2f\xa5\x1e\x42\xb5\x43\xc8\xcb\x73\xcc\xab\x9e\x42\x5e\x5f\x4c\x5c\x37\xac\xbb\x0c\x97\xff\x00\xeb\x30\x70\x0f\xb5\x2e\xe4\xed\xb0\xce\x5e\xb9\x1a\xbc\x73\x9e\x05\xfb\xd1\x40\x75\xd4\x5c\x48\x33\xfa\x57\xfd\x51\x2c\x8c\xc4\xc7\x9f\xbb\x8e\x70\xd7\x4e\xdd\xe1\x49\x99\x7b\xd5\x1f\x2a\x9f\x66\x75\x10\x53\xff\x06\xab\x3b\x37\x0d\x9b\x1f\x7e\x05\x13\x94\xc7\x7f\xed\x46\x04\x55\xfa\x61\x04\xda\x5d\xa7\xc7\xe3\xe0\x82\xdd\x81\xf8\xde\xd1\x5b\xed\x7b\x8b\xf1\xb8\x2f\xd6\xba\x6f\x88\x8e\xae\xa8\xcd\x70\xb1\xc1\xba\x1b\x10\xd4\xf9\xa4\xf9\x39\xa5\xfb\x30\x92\xe8\x0f\x21\x83\xd7\xcb\xf6\xfb\xc8\x61\x73\xdc\x7c\x76\xf9\x40\x98\x9b\x1d\x04\xfc\x5e\x1b\xdb\xed\xdf\x6a\x3f\xd8\xa1\x54\x62\xda\x64\xef\xf4\x33\x45\xc5\x78\x9e\x50\xae\xde\xab\x0f\x03\xd2\xc0\xc7\xf6\x93\xe2\x34\xb7\x9b\xb2\xf1\x9e\x66\x9f\x31\x19\xab\x8e\xb6\xa6\x9b\xb6\xd3\x9c\x90\x34\x38\x7c\xcd\xdc\xba\x33\xff\xef\xfc\xce\xa0\x87\x13\x7f\x1f\x82\xbe\xb8\xff\xfc\xf3\xd0\x87\x10\x99\xf2\x88\xc1\xe0\x7e\x38\xf8\x4f\x00\x00\x00\xff\xff\xa3\x56\x17\x62\xcc\x31\x00\x00")

func staticJavascriptLeafletGeotagphotoCameraJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptLeafletGeotagphotoCameraJs,
		"static/javascript/Leaflet.GeotagPhoto.Camera.js",
	)
}

func staticJavascriptLeafletGeotagphotoCameraJs() (*asset, error) {
	bytes, err := staticJavascriptLeafletGeotagphotoCameraJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/Leaflet.GeotagPhoto.Camera.js", size: 12748, mode: os.FileMode(420), modTime: time.Unix(1586192085, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptLeafletGeotagphotoCameracontrolJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\xdf\x8f\xa3\x36\x10\xc7\xdf\xf9\x2b\x46\xa9\x74\x86\x5b\x42\xda\xc7\x5b\x95\x4a\x77\x69\xa5\x56\x0d\xdd\x55\xd5\x1f\x52\x5f\x2a\x07\x86\xc4\x8a\xf1\x20\x7b\x92\xde\xb6\xda\xff\xbd\x32\x86\x00\xcd\xb2\xba\x4a\xf7\x14\x31\xcc\x7c\xe7\x33\xe3\xaf\x89\x6a\x5a\xb2\x0c\x3b\xa8\x2d\x35\x20\x76\x28\x6b\x8d\x2c\xa2\x08\x3f\x76\x2f\x2a\xac\xe5\x59\x33\xec\xb2\x2d\x19\xb6\xa4\x33\xfc\xc8\x68\xaa\xf8\x9f\x08\x80\x5a\x56\x64\xdc\x3d\xf8\x07\x80\x96\x9c\xf2\x81\x7b\x10\x4c\xad\xc6\x9a\x45\x04\xf0\x9c\x46\x11\x80\x32\x8a\x95\xd4\xea\x6f\xbc\x87\xfa\x6c\x4a\x9f\x07\xf1\x01\x89\xe5\xe1\xf1\x48\x4c\x5b\xd9\xa0\x95\xe9\xa0\x99\xf4\x9a\x7c\x54\x2e\xfb\xf3\x26\x0f\x72\xb8\x89\x75\xf9\xbb\xcc\x21\x3f\x04\x8d\xd8\x17\x8f\x8a\x57\x16\x32\xef\xab\x6a\x8a\xd1\xc8\x76\xde\xaf\x91\x2d\xe4\xd0\xc8\x36\xea\x82\x17\x69\xa1\x0c\xe3\xff\x24\x1b\x84\x1c\x84\x0e\x8b\x5a\xf7\xe1\x75\xa0\x59\xb7\x1e\x67\x2d\x66\x55\x52\x19\xb4\x90\xc3\x2e\xfb\x96\x9a\x5f\x59\xe9\xac\xb4\x28\x19\x63\x51\xa9\x8b\x48\x67\xca\x77\x20\x60\x90\xde\x4b\x2b\x92\x09\x40\x37\xe4\x0f\xcd\xc1\xb7\xff\x5a\x35\x07\xb0\xa4\x31\x5f\x19\x32\xb8\x02\x67\xcb\x7c\x25\xe0\x2e\x0c\xd0\x8f\x9c\x8d\x35\x77\x20\x56\xb0\xf9\x66\x42\x66\xc9\xb9\xa3\x54\xf6\x7f\x2a\x4e\xcb\xae\xa2\x93\xd5\x85\x96\x1f\xce\xcc\x64\x20\x1f\x82\xdd\xc0\x21\x18\x5f\xa1\x52\x10\x05\x5d\xb0\x9f\x0c\xf6\xb2\x3c\x01\x93\x5f\x3b\xc4\xdb\x44\xa4\x9d\x2a\xfc\x77\x3f\x21\xbb\xdf\x5b\xb7\xdb\x74\xe8\x82\x86\xd1\x06\x33\x24\x33\xa6\x01\xfa\x55\xac\xc9\x64\x03\x99\x47\x19\xb0\x7a\xca\xb8\x58\x26\x1b\x14\x96\xe1\x0a\xd9\xce\xc8\xf6\x74\x36\x55\x21\xdb\x1f\xf1\xe9\xd1\xa2\x73\x57\xb4\x66\x8c\x65\x7b\x65\xaa\xce\xcb\xc9\xdc\xa2\x19\x99\x58\x9c\xf0\xa9\xf5\x59\x22\x5d\x90\xec\xfb\x59\xe4\xb3\x35\x23\xd7\xf5\x36\xcc\xb6\x30\xbd\x15\x47\x6e\x74\x0a\xac\x58\x63\x0a\xa5\x96\xce\xf9\x41\x67\xa3\xd5\x66\xb8\x37\xde\x52\x5a\x99\xd3\x8b\x3e\xef\x4e\xeb\x05\x81\x30\x8f\x2f\xcb\x94\x31\x68\xbf\xff\xa5\xd8\x41\x0e\xbe\xf1\xf8\xe6\x68\xb1\xf6\x06\xfd\x42\x8c\xb1\x0e\xca\xef\xca\xff\x86\xf9\x36\x6f\xc3\xa1\xbc\x85\xdf\x95\xd6\x50\x93\x2d\x11\x5c\x69\x11\x0d\x58\x94\x15\x5a\x07\x5a\x9d\x10\x7e\x23\x55\xe2\xc3\x05\xad\x3f\x54\xff\xa6\xdb\x1b\x48\x07\xab\x3f\x88\x1a\x50\x06\xd6\xb0\xef\xb6\xb1\xea\x25\x37\x63\x67\x87\xfc\x9e\xd9\xaa\xfd\xd9\x0f\xe6\xef\x8b\x48\x41\x84\x74\x91\x2c\xe5\x49\xab\xe4\x5a\xcb\x3d\x6a\xd1\x6f\xb4\x3f\x95\x6e\x57\xdf\x5d\xd0\x70\x6f\x29\x7f\xa6\x5e\x20\x05\xd1\xd0\xd9\x61\x45\x7f\x19\xa8\xf6\xba\xd4\xaa\x3c\x89\x74\x52\x90\x39\xa6\xf6\xd1\x52\x2b\x0f\xd2\x1f\x58\x72\xab\xb0\x50\xf4\x4a\x66\x6d\x82\x8d\x5e\x49\x09\x2e\xb3\x58\x53\x79\x76\x0f\xa6\x90\xed\x50\x32\xf5\x99\x2f\x9a\x7c\x70\x7f\xc6\x86\x2e\xb8\xf0\xcd\x1d\x0d\x63\xbb\xb4\x38\xb4\x40\x8d\x0d\x1a\x0e\x28\x9d\xdd\xeb\xfa\x93\xfc\x7e\x75\xf6\xe4\x12\x4d\x5b\xe3\x85\x87\xd6\xaa\xee\x1e\x33\xb2\xea\xa0\x8c\xd4\x61\x49\xe5\x51\xda\x2d\x55\x08\x79\x9e\xc3\xbb\x77\x43\x32\xc0\x66\x03\x5b\x38\xe1\x53\xff\x78\xfb\xd9\x89\x03\xed\x33\xa0\x76\xf8\x29\xea\x5f\x7d\x39\x97\x2f\x16\xe4\x0b\xd9\x0e\xda\x93\x9b\x3b\xe9\x3c\x1d\x70\x3a\xdd\xf8\x87\xf6\xe6\xcd\xd2\xbf\xe9\x48\xb0\x90\x90\x85\x4e\x1f\xfc\xaa\xdd\x28\x99\x1d\x90\xfb\x58\xb2\x00\x57\xc8\xf6\x73\x92\xf9\xa6\xb5\xe2\x19\xc8\x2d\xed\xcb\x58\x51\xf4\x9c\x44\xff\x06\x00\x00\xff\xff\xc5\x84\x97\x69\xf0\x08\x00\x00")

func staticJavascriptLeafletGeotagphotoCameracontrolJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptLeafletGeotagphotoCameracontrolJs,
		"static/javascript/Leaflet.GeotagPhoto.CameraControl.js",
	)
}

func staticJavascriptLeafletGeotagphotoCameracontrolJs() (*asset, error) {
	bytes, err := staticJavascriptLeafletGeotagphotoCameracontrolJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/Leaflet.GeotagPhoto.CameraControl.js", size: 2288, mode: os.FileMode(420), modTime: time.Unix(1586192086, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptLeafletGeotagphotoCrosshairJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x41\x6f\x9c\x3c\x10\xbd\xfb\x57\x8c\x38\xc4\xa0\xb0\x4e\xbe\xeb\x7e\xa5\x97\x6d\xab\x46\xa2\x4a\x0f\xe9\xa9\xaa\x22\x07\x06\xd6\x12\xb6\x91\x99\xdd\xa6\xad\xf6\xbf\x57\x60\x0c\xec\x86\x34\x97\x28\x3b\x9e\xf7\xe6\xcd\x7b\xc6\x4a\xb7\xd6\x11\xe4\x50\x39\xab\x81\xe7\x28\xab\x06\x89\x33\x86\xcf\xc3\x41\x89\x95\x3c\x34\x04\xb9\xf8\x78\x44\x43\x58\x0a\x7c\x26\x34\x65\xfc\x87\x01\xd8\x96\x94\x35\xdd\x16\xfa\x1f\x00\x85\x35\xe4\x6c\xb3\x73\xb6\xeb\xf6\x52\xb9\x3b\x5d\x6f\x81\x0b\x71\xa3\xb4\xac\xb1\xbb\x29\xc2\xc1\x46\x15\xd6\x88\xee\x58\xf3\xd4\x03\xc3\xc1\xe7\x87\x2f\xf9\x16\xf8\x3b\xa5\x6b\x90\x0d\x65\xd1\xae\x9f\xe9\xc0\x56\x40\x7b\x04\x2d\xdb\xff\xe7\x66\x68\x6c\x21\x7b\x01\x11\x90\xa2\x06\xb3\x68\x9a\x1c\x41\xe7\x8a\x2c\xe2\x70\x1d\x34\x8a\x15\x71\x70\x0d\x3c\x82\x9f\xaa\xa4\x7d\x16\xfd\x77\x7b\xdb\x3e\x47\x70\xf3\x9e\x33\x80\x53\xca\x18\x80\x32\x8a\x94\x6c\xd4\x6f\xdc\x42\x75\x30\x45\x4f\x04\xf1\x48\x98\x8c\x4b\xe7\xa2\x43\xba\xf7\xb5\x98\xf6\xaa\x4b\xc3\xc8\x64\x22\x92\x65\xf9\x60\x97\x1c\x5a\xb6\x01\xdf\x43\xc4\xa3\x96\x2d\x64\xfd\x7e\x43\xed\x28\xdd\x60\xa6\x54\x06\x9d\xaf\x8b\x1a\x69\x17\x4a\x71\xb2\x80\x62\x83\x1a\x0d\x41\x06\xb9\xf8\x60\xf5\x37\x52\x8d\x28\x1c\x4a\xc2\x98\x97\xea\xc8\x53\xe0\x8d\x4f\x75\x53\xa3\x25\x59\x6f\xda\xbd\x25\xbb\x99\x7c\xe4\xe9\x3c\x6c\x85\x58\x28\x63\x70\x48\x06\x32\x7f\x32\x59\xba\x8c\x8d\x2d\x90\x4f\xf6\x60\xca\x7b\x73\x67\xda\x03\x05\xd0\xa3\xf5\xbf\xc5\x93\x32\xe5\x60\x54\xf2\x12\xb1\xdb\x4b\x53\xe3\x02\xe2\x0b\x4b\xcc\xb9\x69\xc2\x9a\x98\x6b\x7b\x44\x9e\xae\xcc\x4e\x5e\x69\x46\x53\x5e\xf6\xfb\x41\x23\xbd\x43\x3a\x38\x33\x34\x4c\x19\x3a\xec\x91\x9f\x9c\xd5\xaf\x04\xa9\x2a\x88\xe7\x30\xaf\xae\xd6\xbc\xb8\xac\x8e\x53\x47\x86\x33\xa9\x55\xf5\xe6\x62\xab\xfd\xff\xd8\xad\x47\x9c\xd8\x85\xd8\x31\xe5\x59\xc3\x7c\x8b\xfc\xca\x17\x7d\x4b\x96\x35\x9f\x42\xce\x4b\x97\xce\xee\x7a\xa5\x1c\xc6\x5c\xf5\x3d\x3c\x59\xc2\xbc\xcc\x37\x70\xc5\xd0\xb4\x00\xf6\xdf\x45\xb8\x87\xb9\xa4\xdc\xd4\x6b\x0c\x0b\xa5\xde\xaf\x1e\x36\xbc\x2d\xf1\x3a\xd5\x57\xab\xcc\xea\x0e\x67\x31\xcf\xae\x0d\x9f\xac\x7f\xac\xc6\xdb\xfb\x52\x58\x1c\x62\x1b\xd5\x04\x2c\x00\xfd\x6a\x71\x0b\x7c\x18\x3a\xbe\x89\xfe\x41\xb5\xae\x54\x46\x12\x76\x5b\xf8\x3e\x95\x61\x9c\x24\x1a\x53\xa7\x2b\x55\x49\x53\xf1\xc7\xf8\xdf\x89\x85\xbf\x27\xc6\x4e\x09\xfb\x1b\x00\x00\xff\xff\x8b\xce\x68\xd6\xf7\x05\x00\x00")

func staticJavascriptLeafletGeotagphotoCrosshairJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptLeafletGeotagphotoCrosshairJs,
		"static/javascript/Leaflet.GeotagPhoto.Crosshair.js",
	)
}

func staticJavascriptLeafletGeotagphotoCrosshairJs() (*asset, error) {
	bytes, err := staticJavascriptLeafletGeotagphotoCrosshairJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/Leaflet.GeotagPhoto.Crosshair.js", size: 1527, mode: os.FileMode(420), modTime: time.Unix(1586192086, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticCssLeafletGeotagphotoCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xcd\x6e\x2b\x21\x0c\x85\xf7\x3c\x85\x37\x77\x73\x55\xaa\x89\xba\x0a\x91\xfa\x2e\x4c\xf0\x80\x55\x06\x23\x70\x7e\x9a\x2a\xef\x5e\x31\x4d\xd5\xcc\x74\xaa\xec\xec\xef\x18\x1b\xf9\xf8\x39\xa2\x1d\x22\x8a\xf6\xc8\x62\xbd\xce\x81\x85\xf5\xbe\x70\xad\xc1\x52\x81\x0f\x05\x90\xb9\x92\x10\x27\x03\xb6\xaf\x1c\x0f\x82\x3b\x05\x20\x9c\x0d\x74\x2d\x8a\x38\xc8\x2d\x3c\x91\x93\x60\x60\xd3\x75\xff\x5a\x1a\x90\x7c\x90\x9f\x3c\x33\x25\xc1\xa2\xf1\x88\x49\xaa\x81\xc4\x69\xea\xc5\x47\x2c\x43\xe4\x93\x81\x40\xce\x61\x6a\xec\xa2\x29\x39\x3c\x1b\xd8\x6e\xb7\x3b\xa5\x00\x1c\xd5\x1c\xed\xbb\x01\x7d\xc2\xfe\x8d\x44\xf7\x7c\xde\xcd\xf8\xc8\x97\x15\x58\xf5\x10\xf1\xfc\x8b\xdf\x9a\x34\x6d\x26\x7c\x83\xbb\x29\xda\x46\xf2\xc9\xc0\x1e\xdb\xef\xef\xc5\x56\xbc\xa2\xde\x66\xfe\xfd\x6e\x12\x34\x09\x8e\xf5\x5e\x5e\xc5\x57\xa5\x1e\xb9\xf4\x0a\xff\x17\x4e\x15\x8c\x56\xe8\x88\xb3\x4d\x6e\xba\x6e\xd3\xc0\x68\x8b\xa7\x66\xe7\x41\x78\xde\x7f\xcf\x49\x0a\xc7\xc5\x1c\x3b\x62\xb1\x4f\x8f\xaa\x66\x37\xb3\x38\x84\x6c\x9d\xa3\xe4\x0d\xbc\xe4\x69\xb9\x6d\xa9\x95\x2e\x13\xea\xb9\x38\x2c\x5f\xc6\x5d\x3f\x03\x00\x00\xff\xff\x14\x1a\x4d\x1c\x90\x02\x00\x00")

func staticCssLeafletGeotagphotoCssBytes() ([]byte, error) {
	return bindataRead(
		_staticCssLeafletGeotagphotoCss,
		"static/css/Leaflet.GeotagPhoto.css",
	)
}

func staticCssLeafletGeotagphotoCss() (*asset, error) {
	bytes, err := staticCssLeafletGeotagphotoCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/css/Leaflet.GeotagPhoto.css", size: 656, mode: os.FileMode(420), modTime: time.Unix(1586192089, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticImagesCameraIconSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xdf\x6b\xdb\x30\x10\x7e\x4e\xa1\xff\xc3\xed\xfa\xb2\x42\x2c\x4b\x4e\x62\xc7\x4e\xd4\xd2\x1f\x6b\x29\xec\x61\x30\xe8\xeb\x70\x1d\xd5\xd1\xaa\x48\x46\x52\x62\x9b\xb2\xff\x7d\xc8\x6e\xd7\x16\xfa\x32\x84\x2d\xee\xbb\xbb\xef\xbe\xcf\xe7\xf5\x79\xb7\x53\x70\x10\xd6\x49\xa3\x39\x32\x42\x11\x84\xae\xcc\x46\xea\x9a\xe3\xde\x3f\x46\x4b\x3c\x3f\x3b\x3e\x5a\x7f\x89\x22\xb8\x15\x5a\xd8\xd2\x1b\x5b\xc0\xc5\xc6\x3c\x08\xb8\x53\x6a\xef\xfc\x00\x01\xcb\x09\x23\x74\x0a\x3f\xef\x6f\xe1\x5b\xd7\x18\xeb\xe1\x87\xda\xd7\xd1\x9d\x06\x32\x80\xf7\xe3\x90\x02\x52\x42\x29\x5c\xee\xa5\xda\x00\x3d\x05\x88\xa2\xc0\xef\x0e\xf5\x7b\x19\x0c\x41\x6e\x38\x7e\x2f\x7b\x61\x7f\x31\x84\x6e\xa7\xb4\xe3\xb8\xf5\xbe\x29\xe2\xb8\x6d\x5b\xd2\xce\x88\xb1\x75\x9c\x50\x4a\x63\x77\xa8\x5f\x4a\x8a\x4e\x49\xfd\xf4\x59\x21\xcb\xf3\x3c\x1e\xb2\x08\x1d\x47\xda\x74\x08\xfd\x78\x1f\x1f\x4d\xe0\x20\x45\x7b\x69\x42\x02\x28\x24\x8b\x34\x3c\x08\xce\xf7\x4a\x70\x14\xba\x7c\x50\x22\x7a\x28\xab\xa7\xda\x9a\xbd\xde\x14\x5a\xb4\xf0\xae\x72\x35\x8c\x2f\x5c\x53\x56\x82\x63\x63\x85\x13\xf6\x20\x70\x30\x16\x28\xc0\xf7\x8d\xe0\xe8\x45\xe7\xe3\xca\xb9\x90\x98\x10\xe7\xe9\xb3\x69\xca\x4a\xfa\xbe\xa0\x64\xbe\x7a\x94\x4a\x15\x27\xd9\xf5\x45\x76\x95\xae\x9c\xb7\xe6\x49\x14\x27\xcb\xd9\x15\xbb\xb9\x79\x09\xa3\x9d\xf4\xc2\x2a\xb9\x93\xbe\x60\x74\xf5\x67\x64\x61\xcf\x43\xa7\x36\x5a\xfc\x6b\x4b\xaf\xc3\x79\x6d\x6b\xe5\xc6\x6f\x8b\x84\xbe\xc6\x4a\x6a\x51\x95\x4d\x31\x78\x79\x0f\xfe\x36\x52\x7f\x44\x3f\x9d\x98\x8c\x13\x4f\xd8\x45\x38\x01\x5d\xc7\x83\xcf\x60\xb8\x0e\xe6\xc6\xf7\x64\xdd\x18\xd5\xd7\x46\x43\xa5\x4a\xe7\x38\x3a\x4f\x11\x1a\x23\xb5\x77\x1c\x93\x59\x3e\x65\xc9\x82\xa4\x90\xce\x49\x3a\x65\x39\x23\x73\x60\x33\x4a\xe6\x53\x96\xc1\x64\x82\xf1\x1b\x47\x10\xf7\x46\xc2\xfe\x97\x64\x1d\x8f\xaa\xac\xa8\x7c\xd8\x7e\x42\x49\x3a\xac\x9f\x2d\x16\x24\x47\xf0\xb6\xd4\xee\xd1\xd8\x1d\xc7\x5d\xe9\xad\xec\xbe\x52\x92\xd1\x8c\xc1\xcb\x15\x7d\x0c\xd9\x62\x4e\x92\x34\x9b\x03\xa3\x64\x96\x2f\x96\xa7\xf8\xa6\x2d\x41\x18\x3e\x37\xc7\xe5\x12\x61\x2b\x64\xbd\xf5\x1c\x33\x36\x08\x19\x75\xac\xc3\x0f\x7b\x76\x7c\xf4\x37\x00\x00\xff\xff\x88\xe8\x05\x23\x7d\x03\x00\x00")

func staticImagesCameraIconSvgBytes() ([]byte, error) {
	return bindataRead(
		_staticImagesCameraIconSvg,
		"static/images/camera-icon.svg",
	)
}

func staticImagesCameraIconSvg() (*asset, error) {
	bytes, err := staticImagesCameraIconSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/images/camera-icon.svg", size: 893, mode: os.FileMode(420), modTime: time.Unix(1586192203, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticImagesCameraSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcf\x6a\xdc\x30\x10\x87\xcf\x59\xd8\x77\x98\x4e\x4f\x85\x48\x96\xbc\xb6\x13\x3b\xab\x0d\x09\x94\x10\x68\xa1\xb4\xb0\xd7\xe2\xb5\x27\xb6\x89\x22\x1b\x49\xfe\xb3\x2d\x7d\xf7\x62\x6d\x0f\x2d\x14\x1d\x24\xbe\xf9\x34\xbf\x91\xf6\xf7\xcb\x9b\x86\x89\xac\xeb\x7a\xa3\x50\x72\x81\x40\xa6\xea\xeb\xce\x34\x0a\x47\xff\xc2\x6e\xf1\xfe\xb0\xdd\xec\xdf\x31\x06\x4f\x64\xc8\x96\xbe\xb7\x05\x3c\xd4\xfd\x89\xe0\x59\xeb\xd1\xf9\x80\x40\xe6\x5c\x72\x71\x0d\xdf\x8e\x4f\xf0\x71\x19\x7a\xeb\xe1\x8b\x1e\x1b\xf6\x6c\x80\x07\x78\xbc\x84\x14\x90\x71\x21\xe0\x71\xec\x74\x0d\xe2\x03\x00\x63\x6b\x7f\x37\x35\x7f\x8f\x21\x11\xba\x5a\xe1\xa7\xf2\x4c\xf6\xbb\xc4\xed\xe6\x0a\x96\x37\x6d\x9c\xc2\xd6\xfb\xa1\x88\xa2\x79\x9e\xf9\xbc\xe3\xbd\x6d\xa2\x58\x08\x11\xb9\xa9\xc1\x8b\x52\x2c\xba\x33\xaf\xff\x13\x65\x9e\xe7\x51\xa8\x22\x2c\x0a\xc5\xb0\x20\x9c\xff\xec\x53\x47\xf3\x63\xbf\x28\x64\x71\x92\xc2\x2e\x4b\x21\x4b\x20\x4b\x42\xb2\xf3\x67\x4d\x0a\xc9\x94\x27\x4d\xec\x54\x56\xaf\x8d\xed\x47\x53\x17\x86\x66\xf8\xd7\xbf\x0b\x43\x14\x6e\x28\x2b\x52\x38\x58\x72\x64\x27\xc2\xf0\xc2\xb5\x0b\xf8\xf3\x40\x0a\x3d\x2d\x3e\xaa\x9c\x5b\x0b\x57\xdc\x79\xf1\xf3\xa5\xd3\xba\x78\x9f\x3c\xac\xeb\xee\xd7\x76\xb3\x8f\x82\xbf\x5e\x1c\x4a\xdf\x86\xdf\xf8\x4a\x95\x2f\x4d\xa3\x89\xc5\x08\x95\x2e\x9d\x53\xe8\xbc\x40\xa8\x15\x7e\x66\x71\x7c\xc3\xd3\xeb\xdd\x6d\xca\xb3\x96\xc9\x84\xa7\x53\x9c\x73\xd9\xa6\xb7\x5c\x4e\x2c\x1c\x2f\x94\xdd\xf0\x5d\x1b\xc0\x31\xc8\x3f\x30\x3a\x84\xbc\xa9\x39\x6c\x37\xbf\x03\x00\x00\xff\xff\xcc\xfc\x95\x1f\x11\x02\x00\x00")

func staticImagesCameraSvgBytes() ([]byte, error) {
	return bindataRead(
		_staticImagesCameraSvg,
		"static/images/camera.svg",
	)
}

func staticImagesCameraSvg() (*asset, error) {
	bytes, err := staticImagesCameraSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/images/camera.svg", size: 529, mode: os.FileMode(420), modTime: time.Unix(1586192204, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticImagesCrosshairIconSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x5f\x6b\xdb\x30\x14\xc5\x9f\x1b\xc8\x77\xb8\xbb\x7d\x1a\xcc\xb2\xe4\x76\x69\xa3\x44\x2d\xed\x36\x4a\x61\x0f\x83\x41\x5f\x87\x23\xdf\xba\x22\x8a\x64\x24\xf9\x1f\x63\xdf\x7d\xd8\x49\x21\x0f\x15\x08\xe9\xdc\xf3\xd3\x3d\x92\xb6\xf7\xc3\xc1\x42\x47\x21\x1a\xef\x14\x0a\xc6\x11\xc8\x69\x5f\x19\x57\x2b\x6c\xd3\x6b\x76\x8b\xf7\x77\xcb\xc5\xf6\x53\x96\xc1\x13\x39\x0a\x65\xf2\x41\xc2\x43\xe5\x77\x04\xcf\xd6\xb6\x31\xcd\x25\x10\x6b\x26\x18\xff\x02\xbf\x5f\x9e\xe0\xc7\xd0\xf8\x90\xe0\x97\x6d\xeb\xec\xd9\x01\x9b\x8b\x2f\xc7\x10\x09\x2b\xc6\x39\x3c\xb6\xc6\x56\xc0\x3f\x03\x64\xd9\xd4\x3f\x76\xf5\xf9\x35\x04\x82\xa9\x14\xfe\x2c\x47\x0a\x7f\x04\xc2\x70\xb0\x2e\x2a\x7c\x4b\xa9\x91\x79\xde\xf7\x3d\xeb\xaf\x98\x0f\x75\x5e\x70\xce\xf3\xd8\xd5\x27\x44\x0e\xd6\xb8\xfd\x47\xa0\x58\xaf\xd7\xf9\xec\x22\x0c\x0a\x79\x33\x20\x8c\xc7\x75\xb9\xb8\x80\xce\x50\xff\xe8\x27\x03\x38\x14\x5f\x57\xd3\x44\x88\x69\xb4\xa4\x90\x5c\xb9\xb3\x94\xed\x4a\xbd\xaf\x83\x6f\x5d\x25\x1d\xf5\x70\x46\x6e\xe6\x78\x19\x9b\x52\x93\xc2\x26\x50\xa4\xd0\x11\xce\x0f\x9b\x5a\x40\x1a\x1b\x52\x98\x68\x48\xb9\x8e\x71\x32\x2e\x58\x4c\xfc\xef\xab\xb1\x56\x5e\xde\x7c\x7f\xb8\xf9\xb6\xda\x4c\x22\xf3\x4d\xa9\x4d\x1a\x25\x67\xd7\x9b\x98\x82\xdf\x93\xbc\xe4\xf3\x38\xc9\xac\x37\x55\x7a\x93\x62\xf5\xae\x0f\x26\x51\xb0\xe6\x60\x92\x14\x7c\xf3\x6f\xb9\xd8\xe6\x73\xe8\x94\xae\x4d\xd0\x96\x40\xdb\x32\x46\x85\x31\x71\x04\x3d\x28\x14\xc5\x2d\x82\x1e\x4f\x9b\xa0\x50\x88\x6b\xcc\xcf\x0f\x7c\x04\x15\x05\xbb\x3a\x52\xd3\x8f\xdf\x2d\x17\xff\x03\x00\x00\xff\xff\xc0\x98\x8c\x38\x3e\x02\x00\x00")

func staticImagesCrosshairIconSvgBytes() ([]byte, error) {
	return bindataRead(
		_staticImagesCrosshairIconSvg,
		"static/images/crosshair-icon.svg",
	)
}

func staticImagesCrosshairIconSvg() (*asset, error) {
	bytes, err := staticImagesCrosshairIconSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/images/crosshair-icon.svg", size: 574, mode: os.FileMode(420), modTime: time.Unix(1586192204, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticImagesCrosshairSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x5f\x6b\xdb\x30\x14\xc5\x9f\x1b\xc8\x77\xb8\xbb\x7b\x1a\xcc\xb2\xdc\x34\x4b\xad\x44\x2d\x2b\x8c\x52\xd8\xc3\x60\xd0\xd7\xe1\xc8\xb7\xae\x16\x45\x32\x92\xfc\x8f\xb1\xef\x3e\xac\x74\x90\x8d\x08\x84\xb8\xe7\x1e\x1d\xfd\x24\xed\xee\xc7\xa3\x81\x9e\x7c\xd0\xce\x4a\x2c\x18\x47\x20\xab\x5c\xad\x6d\x23\xb1\x8b\x2f\xd9\x2d\xde\xdf\x2d\x17\xbb\x77\x59\x06\x8f\x64\xc9\x57\xd1\x79\x01\x9f\x6b\xb7\x27\x78\x32\xa6\x0b\x31\x49\x50\x94\xac\x60\xfc\x23\x7c\x7f\x7e\x84\x2f\x63\xeb\x7c\x84\x6f\xa6\x6b\xb2\x27\x0b\x2c\x89\xcf\xa7\x43\x04\x7c\x62\x9c\xc3\x43\xa7\x4d\x0d\xfc\x03\x40\x96\xcd\xf9\xa1\x6f\xce\x31\x0a\x04\x5d\x4b\xfc\x5a\x4d\xe4\x7f\x14\x08\xe3\xd1\xd8\x20\xf1\x35\xc6\x56\xe4\xf9\x30\x0c\x6c\x58\x31\xe7\x9b\xfc\x9a\x73\x9e\x87\xbe\x79\xb3\x88\xd1\x68\x7b\xb8\x64\x2c\xca\xb2\xcc\x53\x17\x61\x94\xc8\xdb\x11\x61\x3a\xad\xcb\xc5\x15\xf4\x9a\x86\x07\x37\x4a\xcc\xae\xd7\x6b\x58\xdd\x6c\xa0\xe0\x7c\x9e\x08\x21\x4e\x86\x24\x92\xad\xf6\x86\xb2\x7d\xa5\x0e\x8d\x77\x9d\xad\x85\xa5\x01\xfe\xb7\x6f\x13\x88\x08\x6d\xa5\x48\x62\xeb\x29\x90\xef\x09\xd3\x15\xe7\x1c\x88\x53\x4b\x12\x23\x8d\x31\x57\x21\xcc\x8d\x2b\x16\x22\xff\xf5\xa2\x8d\x11\xd6\x59\xda\x86\xe8\xdd\x81\xc4\x7b\x9e\xc6\x5b\x99\x0d\xba\x8e\xaf\x62\xf5\xb7\x34\xda\x92\xaa\x5a\x91\x48\xce\xc5\x9f\x4e\xdb\x7f\xd5\xa3\x8e\xe4\x8d\x3e\xea\x28\x0a\xbe\xfd\xbd\x5c\xec\xf2\x84\x32\x33\x29\xed\x95\x21\x50\xa6\x0a\x41\x62\x88\x1c\x41\xa5\x47\xe0\x6b\x04\x35\x49\x5c\x95\x1b\x04\x2f\xf1\x66\x83\xf9\xf9\x86\xcb\x26\x76\x7b\x72\xcd\x3f\x72\xb7\x5c\xfc\x09\x00\x00\xff\xff\xda\x8c\x93\xe4\x5e\x02\x00\x00")

func staticImagesCrosshairSvgBytes() ([]byte, error) {
	return bindataRead(
		_staticImagesCrosshairSvg,
		"static/images/crosshair.svg",
	)
}

func staticImagesCrosshairSvg() (*asset, error) {
	bytes, err := staticImagesCrosshairSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/images/crosshair.svg", size: 606, mode: os.FileMode(420), modTime: time.Unix(1586192205, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticImagesMarkerSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x5f\x6b\xdb\x30\x14\xc5\x9f\x5b\xc8\x77\xb8\xbb\x7b\x1a\xcc\xfa\xe3\x94\x25\x76\xa3\x96\x16\x46\x29\xec\x61\x30\xe8\xeb\x70\x94\x5b\x47\x44\x91\x8c\x24\xff\xa3\xec\xbb\x0f\xdb\x1d\x6c\x90\x21\x90\xe0\xdc\xfb\x3b\x3a\xba\xda\xdd\x0f\x67\x0b\x1d\x85\x68\xbc\x53\x28\x99\x40\x20\xa7\xfd\xc1\xb8\x5a\x61\x9b\x5e\xb3\x2d\xde\xdf\xad\xae\x77\x1f\xb2\x0c\x9e\xc8\x51\xa8\x92\x0f\x25\x3c\x1c\xfc\x9e\xe0\xd9\xda\x36\xa6\x59\x02\x59\x30\xc9\xc4\x67\xf8\xf1\xf2\x04\x5f\x87\xc6\x87\x04\xdf\x6d\x5b\x67\xcf\x0e\xd8\x2c\xbe\x2c\x97\x94\xf0\x85\x09\x01\x8f\xad\xb1\x07\x10\x9f\x00\xb2\x6c\xf2\x8f\x5d\xfd\x77\x0c\x89\x60\x0e\x0a\xbf\x55\x23\x85\x9f\x12\x61\x38\x5b\x17\xcb\x78\xa2\xa4\x8f\x0a\x8f\x29\x35\x25\xe7\x7d\xdf\xb3\xbd\x3f\xd2\xd9\x54\xef\x91\x99\xf6\x67\xbe\x74\x71\x17\x71\x75\x7d\xb5\x90\xff\x20\xfd\x9a\xf9\x50\xf3\x5c\x08\xc1\x63\x57\xff\x31\x1f\xac\x71\xa7\x4b\x8d\xb2\x28\x0a\x3e\x57\x11\x06\x85\xa2\x19\x10\xc6\xf7\xb3\x33\xd4\x3f\xfa\x41\x61\x96\x4b\xc9\x72\x58\x6f\x72\x56\xc0\xcd\x96\xe5\xf3\x36\x27\x88\x69\xb4\xa4\x90\x5c\xb5\xb7\x94\xed\x2b\x7d\xaa\x83\x6f\xdd\xa1\x74\xd4\xc3\x65\xee\x76\x0e\x55\xc6\xa6\xd2\xa4\xb0\x09\x14\x29\x74\x84\xf3\xa0\x26\x37\x48\x63\x43\x0a\x13\x0d\x89\xeb\x18\xa7\xc2\x15\x8b\x49\xbc\xbd\x1a\x6b\xcb\x8f\x37\x0f\xd3\xba\xfd\xb5\xa8\xf2\xcd\x37\x95\x36\x69\x2c\x05\xcb\x27\x71\xc7\x67\x93\xc9\x4d\x9b\xa0\x2d\x81\xb6\x55\x8c\x0a\x63\x12\x08\x7a\x7a\x8d\xdc\x6e\xa6\x3f\xd0\xa3\xc2\x75\xb1\x41\x08\x0a\xb7\x6c\x8d\xfc\x12\x23\xff\xcf\xe4\xf9\x82\x4c\x73\xbe\x5b\x5d\xff\x0e\x00\x00\xff\xff\x6d\x72\x3a\x1f\x6e\x02\x00\x00")

func staticImagesMarkerSvgBytes() ([]byte, error) {
	return bindataRead(
		_staticImagesMarkerSvg,
		"static/images/marker.svg",
	)
}

func staticImagesMarkerSvg() (*asset, error) {
	bytes, err := staticImagesMarkerSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/images/marker.svg", size: 622, mode: os.FileMode(420), modTime: time.Unix(1586192206, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/javascript/Leaflet.GeotagPhoto.Camera.js": staticJavascriptLeafletGeotagphotoCameraJs,
	"static/javascript/Leaflet.GeotagPhoto.CameraControl.js": staticJavascriptLeafletGeotagphotoCameracontrolJs,
	"static/javascript/Leaflet.GeotagPhoto.Crosshair.js": staticJavascriptLeafletGeotagphotoCrosshairJs,
	"static/css/Leaflet.GeotagPhoto.css": staticCssLeafletGeotagphotoCss,
	"static/images/camera-icon.svg": staticImagesCameraIconSvg,
	"static/images/camera.svg": staticImagesCameraSvg,
	"static/images/crosshair-icon.svg": staticImagesCrosshairIconSvg,
	"static/images/crosshair.svg": staticImagesCrosshairSvg,
	"static/images/marker.svg": staticImagesMarkerSvg,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"Leaflet.GeotagPhoto.css": &bintree{staticCssLeafletGeotagphotoCss, map[string]*bintree{}},
		}},
		"images": &bintree{nil, map[string]*bintree{
			"camera-icon.svg": &bintree{staticImagesCameraIconSvg, map[string]*bintree{}},
			"camera.svg": &bintree{staticImagesCameraSvg, map[string]*bintree{}},
			"crosshair-icon.svg": &bintree{staticImagesCrosshairIconSvg, map[string]*bintree{}},
			"crosshair.svg": &bintree{staticImagesCrosshairSvg, map[string]*bintree{}},
			"marker.svg": &bintree{staticImagesMarkerSvg, map[string]*bintree{}},
		}},
		"javascript": &bintree{nil, map[string]*bintree{
			"Leaflet.GeotagPhoto.Camera.js": &bintree{staticJavascriptLeafletGeotagphotoCameraJs, map[string]*bintree{}},
			"Leaflet.GeotagPhoto.CameraControl.js": &bintree{staticJavascriptLeafletGeotagphotoCameracontrolJs, map[string]*bintree{}},
			"Leaflet.GeotagPhoto.Crosshair.js": &bintree{staticJavascriptLeafletGeotagphotoCrosshairJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
